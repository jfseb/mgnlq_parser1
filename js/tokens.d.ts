import * as chevrotain from 'chevrotain';
export declare const Tokens: {
    ACategory: chevrotain.TokenConstructor;
    ADomain: chevrotain.TokenConstructor;
    AFact: chevrotain.TokenConstructor;
    all: chevrotain.TokenConstructor;
    AnANY: chevrotain.TokenConstructor;
    and: chevrotain.TokenConstructor;
    any: chevrotain.TokenConstructor;
    at: chevrotain.TokenConstructor;
    a: chevrotain.TokenConstructor;
    Comma: chevrotain.TokenConstructor;
    containing: chevrotain.TokenConstructor;
    contains: chevrotain.TokenConstructor;
    domain: chevrotain.TokenConstructor;
    ending_with: chevrotain.TokenConstructor;
    ending: chevrotain.TokenConstructor;
    ends_with: chevrotain.TokenConstructor;
    ends: chevrotain.TokenConstructor;
    equals: chevrotain.TokenConstructor;
    every: chevrotain.TokenConstructor;
    e: chevrotain.TokenConstructor;
    first: chevrotain.TokenConstructor;
    for: chevrotain.TokenConstructor;
    from: chevrotain.TokenConstructor;
    greater: chevrotain.TokenConstructor;
    GT: chevrotain.TokenConstructor;
    in: chevrotain.TokenConstructor;
    is: chevrotain.TokenConstructor;
    last: chevrotain.TokenConstructor;
    latest: chevrotain.TokenConstructor;
    least: chevrotain.TokenConstructor;
    leat: chevrotain.TokenConstructor;
    less: chevrotain.TokenConstructor;
    life: chevrotain.TokenConstructor;
    list: chevrotain.TokenConstructor;
    LParen: chevrotain.TokenConstructor;
    LT: chevrotain.TokenConstructor;
    newest: chevrotain.TokenConstructor;
    of: chevrotain.TokenConstructor;
    oldest: chevrotain.TokenConstructor;
    one: chevrotain.TokenConstructor;
    relating: chevrotain.TokenConstructor;
    RParen: chevrotain.TokenConstructor;
    select: chevrotain.TokenConstructor;
    short: chevrotain.TokenConstructor;
    starting_with: chevrotain.TokenConstructor;
    starting: chevrotain.TokenConstructor;
    starts_with: chevrotain.TokenConstructor;
    starts: chevrotain.TokenConstructor;
    than: chevrotain.TokenConstructor;
    the: chevrotain.TokenConstructor;
    where: chevrotain.TokenConstructor;
    with: chevrotain.TokenConstructor;
    Integer: chevrotain.TokenConstructor;
    Identifier: chevrotain.TokenConstructor;
};
